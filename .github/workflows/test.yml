name: test

on:
  push:
  pull_request:
    types: [review_requested, ready_for_review]
  workflow_dispatch:

jobs:
  # *************************************
  # ************* Pre-commit ************
  # *************************************
  pre-commit:
    name: pre-commit ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      max-parallel: 5
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - "3.11"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install detect-secrets
        run: pip install --no-cache-dir detect-secrets doc8
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # *************************************
  # **************** Tests **************
  # *************************************
  test:
    needs: pre-commit
    name: test ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - "3.12"
    env:
      PYO3_USE_ABI3_FORWARD_COMPATIBILITY: "1"
    steps:
      - name: Clean-up
        run: sudo apt clean && sudo apt autoclean && sudo rm -rf /tmp/* && sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install package
        run: |
          pip install -e .[all]
      - name: Run test suite
        run: |
          pytest -vrx
        env:
          PYTEST_ADDOPTS: "-vv --durations=10"
      - name: Generate static coverage badge
        id: generate-static-coverage-badge
        continue-on-error: true
        run: |
          coverage-badge -o coverage.svg
          cp -r ./htmlcov/* .
      - name: Deploy Coverage Badge to Orphan Branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: coverage
          publish_dir: .
          force_orphan: true
          keep_files: false
          user_name: ${{ github.actor }}
          user_email: ${{ github.actor }}@users.noreply.github.com
          commit_message: "Update coverage badge"
